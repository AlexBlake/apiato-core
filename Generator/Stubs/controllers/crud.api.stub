<?php

namespace App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Controllers;

use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Create{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Delete{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\GetAll{{models}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Find{{model}}ByIdRequest;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Requests\Update{{model}}Request;
use App\Containers\{{section-name}}\{{container-name}}\UI\{{user-interface}}\Transformers\{{model}}Transformer;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Create{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Find{{model}}ByIdAction;
use App\Containers\{{section-name}}\{{container-name}}\Actions\GetAll{{models}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Update{{model}}Action;
use App\Containers\{{section-name}}\{{container-name}}\Actions\Delete{{model}}Action;
use App\Ship\Parents\Controllers\{{base-controller}};
use Apiato\Core\Foundation\Facades\Apiato;
use Illuminate\Http\JsonResponse;

class {{class-name}} extends {{base-controller}}
{
    public function create{{model}}(Create{{model}}Request $request): JsonResponse
    {
        ${{entity}} = Apiato::call(Create{{model}}Action::class, [$request]);
        return $this->created($this->transform(${{entity}}, {{model}}Transformer::class));
    }

    public function find{{model}}ById(Find{{model}}ByIdRequest $request): array
    {
        ${{entity}} = Apiato::call(Find{{model}}ByIdAction::class, [$request]);
        return $this->transform(${{entity}}, {{model}}Transformer::class);
    }

    public function getAll{{models}}(GetAll{{models}}Request $request): array
    {
        ${{entities}} = Apiato::call(GetAll{{models}}Action::class, [$request]);
        return $this->transform(${{entities}}, {{model}}Transformer::class);
    }

    public function update{{model}}(Update{{model}}Request $request): array
    {
        ${{entity}} = Apiato::call(Update{{model}}Action::class, [$request]);
        return $this->transform(${{entity}}, {{model}}Transformer::class);
    }

    public function delete{{model}}(Delete{{model}}Request $request): JsonResponse
    {
        Apiato::call(Delete{{model}}Action::class, [$request]);
        return $this->noContent();
    }
}
